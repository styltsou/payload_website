/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    pages: Page;
    media: Media;
    studies: Study;
    categories: Category;
    users: User;
    'form-submissions': FormSubmission;
    redirects: Redirect;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    'mega-menu': MegaMenu;
    footer: Footer;
    'social-media': SocialMedia;
    settings: Settings;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  publishedAt?: string | null;
  hero: {
    type: 'minimal' | 'contentAboveImage' | 'contentLeftOfImage';
    heroMedia?: number | Media | null;
    richText: {
      [k: string]: unknown;
    }[];
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
            appearance?: ('default' | 'primary' | 'secondary') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  layout?:
    | (
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            columns?:
              | {
                  size: 'oneThird' | 'half' | 'twoThirds' | 'full';
                  textAlignment: 'left' | 'center' | 'right';
                  richText: {
                    [k: string]: unknown;
                  }[];
                  id?: string | null;
                }[]
              | null;
            accentLine?: boolean | null;
            accentLineAlignment?: ('left' | 'right') | null;
            paddingTop?: ('none' | 'small' | 'medium' | 'large') | null;
            paddingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'content';
          }
        | {
            media: number | Media;
            type?: ('normal' | 'wide' | 'fullscreen') | null;
            caption?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'media-block';
          }
        | {
            size?: ('small' | 'medium' | 'large') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'spacer';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            richText: {
              [k: string]: unknown;
            }[];
            actions?:
              | {
                  link: {
                    type?: ('reference' | 'custom') | null;
                    newTab?: boolean | null;
                    reference?: {
                      relationTo: 'pages';
                      value: number | Page;
                    } | null;
                    url?: string | null;
                    label: string;
                    appearance?: ('primary' | 'secondary') | null;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'call-to-action';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            actions?:
              | {
                  label: string;
                  linkIcon?: boolean | null;
                  link: {
                    type?: ('reference' | 'custom') | null;
                    newTab?: boolean | null;
                    reference?: {
                      relationTo: 'pages';
                      value: number | Page;
                    } | null;
                    url?: string | null;
                    label: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cta-grid';
          }
        | {
            images?:
              | {
                  image: number | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'media-collage';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            richText?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            images?:
              | {
                  image: number | Media;
                  description?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'media-grid';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            media?:
              | {
                  media: number | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'media-slider';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            richText: {
              [k: string]: unknown;
            }[];
            enableCTA?: boolean | null;
            link?: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?: {
                relationTo: 'pages';
                value: number | Page;
              } | null;
              url?: string | null;
              label: string;
              appearance?: 'primary' | null;
            };
            images?:
              | {
                  image: number | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'media-content-collage';
          }
        | {
            stats?:
              | {
                  stat: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            media?:
              | {
                  media: number | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'media-stat-collage';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            topOverlap?: ('none' | 'small' | 'medium' | 'large') | null;
            bottomOverlap?: ('none' | 'small' | 'medium' | 'large') | null;
            statistics?:
              | {
                  stat: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'statistics';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            sections?:
              | {
                  title: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'sticky-content';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            studies: (number | Study)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'study-slider';
          }
      )[]
    | null;
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: number | Media | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    feature?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "studies".
 */
export interface Study {
  id: number;
  title: string;
  featuredMedia: number | Media;
  previewMedia?:
    | {
        media: number | Media;
        id?: string | null;
      }[]
    | null;
  client?: string | null;
  location?: string | null;
  categories?: (number | Category)[] | null;
  layout?:
    | (
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            columns?:
              | {
                  size: 'oneThird' | 'half' | 'twoThirds' | 'full';
                  textAlignment: 'left' | 'center' | 'right';
                  richText: {
                    [k: string]: unknown;
                  }[];
                  id?: string | null;
                }[]
              | null;
            accentLine?: boolean | null;
            accentLineAlignment?: ('left' | 'right') | null;
            paddingTop?: ('none' | 'small' | 'medium' | 'large') | null;
            paddingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'content';
          }
        | {
            media: number | Media;
            type?: ('normal' | 'wide' | 'fullscreen') | null;
            caption?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'media-block';
          }
        | {
            size?: ('small' | 'medium' | 'large') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'spacer';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            richText: {
              [k: string]: unknown;
            }[];
            actions?:
              | {
                  link: {
                    type?: ('reference' | 'custom') | null;
                    newTab?: boolean | null;
                    reference?: {
                      relationTo: 'pages';
                      value: number | Page;
                    } | null;
                    url?: string | null;
                    label: string;
                    appearance?: ('primary' | 'secondary') | null;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'call-to-action';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            actions?:
              | {
                  label: string;
                  linkIcon?: boolean | null;
                  link: {
                    type?: ('reference' | 'custom') | null;
                    newTab?: boolean | null;
                    reference?: {
                      relationTo: 'pages';
                      value: number | Page;
                    } | null;
                    url?: string | null;
                    label: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cta-grid';
          }
        | {
            images?:
              | {
                  image: number | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'media-collage';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            richText?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            images?:
              | {
                  image: number | Media;
                  description?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'media-grid';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            media?:
              | {
                  media: number | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'media-slider';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            richText: {
              [k: string]: unknown;
            }[];
            enableCTA?: boolean | null;
            link?: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?: {
                relationTo: 'pages';
                value: number | Page;
              } | null;
              url?: string | null;
              label: string;
              appearance?: 'primary' | null;
            };
            images?:
              | {
                  image: number | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'media-content-collage';
          }
        | {
            stats?:
              | {
                  stat: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            media?:
              | {
                  media: number | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'media-stat-collage';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            topOverlap?: ('none' | 'small' | 'medium' | 'large') | null;
            bottomOverlap?: ('none' | 'small' | 'medium' | 'large') | null;
            statistics?:
              | {
                  stat: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'statistics';
          }
        | {
            backgroundColor?: ('none' | 'red' | 'blue' | 'orange' | 'gray') | null;
            sections?:
              | {
                  title: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'sticky-content';
          }
      )[]
    | null;
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: number | Media | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  roles?: ('admin' | 'user')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  from?: string | null;
  message?: string | null;
  source?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mega-menu".
 */
export interface MegaMenu {
  id: number;
  navigation?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-media".
 */
export interface SocialMedia {
  id: number;
  links?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Settings {
  id: number;
  postsPage?: (number | null) | Page;
  projectsPage?: (number | null) | Page;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}